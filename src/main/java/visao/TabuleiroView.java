/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import controle.Controle;
import modelo.tabuleiro.Tabuleiro;
import java.awt.Color;
import java.awt.Point;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JToggleButton;
import modelo.personagem.TipoPersonagem;
import constante.Constantes;
import modelo.personagem.Personagem;
import modelo.tabuleiro.TipoSolo;

/**
 *
 * @author Gabriel
 */
public class TabuleiroView extends javax.swing.JFrame {

    protected static JToggleButton campoGrafico[][];
    CardPersonagem opened;
    private boolean charsCreated;
    private int numCreated;

    /**
     * Creates new form TabuleiroView
     */
    public TabuleiroView() {
        campoGrafico = new JToggleButton[Constantes.getTamLinha()][Constantes.getTamColuna()];
        initComponents();
        initCampo();
        charsCreated = false;
        numCreated = 0;
        pack();
        setLocationRelativeTo(null);
        setResizable(false);
        setTitle("DRAL");
        //chamarCard();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(28, 28));
        jPanel1.add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel3.setBackground(new java.awt.Color(0, 0, 102));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("DilleniaUPC", 1, 112)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 0));
        jLabel1.setText("Dral");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(41, 194, 0, 0);
        jPanel3.add(jLabel1, gridBagConstraints);

        jButton1.setForeground(new java.awt.Color(204, 0, 0));
        jButton1.setText("Passar Vez!");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 246, 0, 49);
        jPanel3.add(jButton1, gridBagConstraints);

        jLabel2.setBackground(new java.awt.Color(153, 255, 51));
        jLabel2.setForeground(new java.awt.Color(153, 255, 102));
        jLabel2.setText("Jogador Atual: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
        jPanel3.add(jLabel2, gridBagConstraints);

        jLabel3.setForeground(new java.awt.Color(153, 255, 102));
        jLabel3.setText("                  ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
        jPanel3.add(jLabel3, gridBagConstraints);

        jButton2.setForeground(new java.awt.Color(204, 0, 0));
        jButton2.setText("Fechar Jogo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 244, 0, 49);
        jPanel3.add(jButton2, gridBagConstraints);

        jLabel4.setBackground(new java.awt.Color(153, 255, 51));
        jLabel4.setForeground(new java.awt.Color(153, 255, 51));
        jLabel4.setText("Turno:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);
        jPanel3.add(jLabel4, gridBagConstraints);

        jLabel5.setBackground(new java.awt.Color(153, 255, 51));
        jLabel5.setForeground(new java.awt.Color(153, 255, 51));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel3.add(jLabel5, gridBagConstraints);

        jPanel1.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 870, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 787, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        if (charsCreated) {
            Controle.getObject().passarTurno();
            campoGrafico = atualizarCampo();
            JOptionPane.showMessageDialog(this, "turno passado para " + Controle.getObject().getJogadorDaVez().getNome());
        }
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        System.exit(0);
    }

    private void initCampo() {
        for (int i = 0; i < campoGrafico.length; i++) {
            for (int j = 0; j < campoGrafico[0].length; j++) {
                campoGrafico[i][j] = new JToggleButton();
                campoGrafico[i][j].setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                campoGrafico[i][j].setBackground(Color.green);
                if (j >= 23) {
                    campoGrafico[i][j].setBackground(Color.WHITE);
                } else if (j <= 17 && j >= 12) {
                    campoGrafico[i][j].setBackground(Color.BLUE);
                    if ((i >= 14 && i <= 18) || i == 3 || i == 24 || i == 10) {
                        campoGrafico[i][j].setBackground(Color.DARK_GRAY);
                    }
                }
                if ((j == 18 && i == 12) || (j == 11 && i == 20)) {
                    campoGrafico[i][j].setBackground(Color.BLACK);
                }
                campoGrafico[i][j].setIcon(new ImageIcon(getClass().getResource(Tabuleiro.getObject().getCelula(i, j).getTipoSolo().getImagePath())));
                campoGrafico[i][j].addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        clique(evt);
                    }
                });
            }
        }
        addEmjPanel2();
    }

    private void addEmjPanel2() {
        for (int i = 0; i < campoGrafico.length; i++) {
            for (int j = 0; j < campoGrafico[0].length; j++) {
                jPanel2.add(campoGrafico[i][j]);
            }
        }
    }

    private void clique(java.awt.event.ActionEvent evt) {
        if (charsCreated) {
            try {
                Point ponto = getSelectedPoint(campoGrafico);
                Controle.getObject().selecionarAcao(ponto.x, ponto.y);
                createCard(Tabuleiro.getObject().getCelula(ponto.x, ponto.y).getPersonagem());
            } catch (NullPointerException e) {
                //JOptionPane.showMessageDialog(null, "Ação inválida", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            try {
                int chara = Integer.parseInt(JOptionPane.showInputDialog("*--------------selecione um número:--------------*"
                        + "\n1-Guerreiro\n2-Arqueiro\n3-Bardo\n4-Assassino\n5-Clerigo\nOutro num- Finalizar\n"
                        + "*-----------------------------------------------*"));
                createCharView(chara);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Use Os números correspondentes", "Erro!", JOptionPane.ERROR_MESSAGE);
            }
        }
        campoGrafico = atualizarCampo();

    }

    private void createCard(Personagem p) {
        if (opened != null) {
            opened.dispose();
            opened = null;
        }
        if (p != null && Controle.getObject().getJogadorDaVez().personagemPertenceAoJogador(p) && Controle.getObject().getJogadorDaVez().getCelulaSelecionada().getPersonagem().equals(p)) {
            CardPersonagem card = new CardPersonagem(p);
            card.setLocation(0, this.HEIGHT);
            opened = card;
            card.setVisible(true);
        }
    }

    private void createCharView(int chara) {
        TipoPersonagem tipo = TipoPersonagem.ARQUEIRO;
        boolean canCreate = true;
        switch (chara) {
            case 1:
                tipo = TipoPersonagem.GUERREIRO;
                break;
            case 2:
                tipo = TipoPersonagem.ARQUEIRO;
                break;
            case 3:
                tipo = TipoPersonagem.BARDO;
                break;
            case 4:
                tipo = TipoPersonagem.ASSASSINO;
                break;
            case 5:
                tipo = TipoPersonagem.CLERIGO;
                break;
            default:
                canCreate = false;
                if (Controle.getObject().getJogadorDaVez().getPersonagens().size() > 0) {
                    numCreated = 14;
                    Controle.getObject().passarTurno();
                }
        }
        if (canCreate) {
            for (int i = 0; i < campoGrafico.length; i++) {
                for (int j = 0; j < campoGrafico[0].length; j++) {
                    if (campoGrafico[i][j].isSelected()) {
                        Controle.getObject().selecionarPersonagem(i, j, tipo, Controle.getObject().getJogo().getTurnoAtual());
                        break;
                    }
                }
            }
        }
        numCreated++;
        if (numCreated == 15 && Controle.getObject().getJogadorDaVez().getNome().equals("Jogador 2")) {
            numCreated = 0;
        }
        if (Controle.getObject().getJogadorDaVez().getNome().equals("Jogador 1") && numCreated == 15) {
            charsCreated = true;
            Controle.getObject().handleEndOfCreation();
        }
    }

    private Point getSelectedPoint(JToggleButton[][] campoGrafico) {
        for (int i = 0; i < campoGrafico.length; i++) {
            for (int j = 0; j < campoGrafico[0].length; j++) {
                if (campoGrafico[i][j].isSelected()) {
                    return new Point(i, j);
                }
            }
        }
        return null;
    }

    private JToggleButton[][] atualizarCampo() {
        for (int i = 0; i < campoGrafico.length; i++) {
            for (int j = 0; j < campoGrafico[0].length; j++) {
                if (null != Tabuleiro.getObject().getTabuleiro()[i][j].getPersonagem()) {
                    atualizarPecas(new Point(i, j));
                } else {
                    campoGrafico[i][j].setIcon(new ImageIcon(getClass().getResource(Tabuleiro.getObject().getCelula(i, j).getTipoSolo().getImagePath())));
                }
                campoGrafico[i][j].setSelected(false);

            }
        }
        jLabel3.setText(Controle.getObject().getJogadorDaVez().getNome());
        jLabel5.setText("" + Controle.getObject().getJogo().getTurnoAtual());
        return campoGrafico;
    }

    private void atualizarPecas(Point ponto) {
        Personagem p = Tabuleiro.getObject().getTabuleiro()[ponto.x][ponto.y].getPersonagem();
        TipoPersonagem pl = p.getTipoPersonagem();
        switch (pl) {
            case ARQUEIRO:
                if (p.getSide() == 0) {
                    campoGrafico[ponto.x][ponto.y].setIcon(new ImageIcon(getClass().getResource("/Arqueiro(By Meilun).png")));
                } else {
                    campoGrafico[ponto.x][ponto.y].setIcon(new ImageIcon(getClass().getResource("/Arqueiro(2).png")));
                }
                break;
            case GUERREIRO:
                if (p.getSide() == 0) {
                    campoGrafico[ponto.x][ponto.y].setIcon(new ImageIcon(getClass().getResource("/Guerreiro(By Meilun).png")));
                } else {
                    campoGrafico[ponto.x][ponto.y].setIcon(new ImageIcon(getClass().getResource("/Guerreiro(2).png")));
                }
                break;
            case ASSASSINO:
                if (p.getSide() == 0) {
                    campoGrafico[ponto.x][ponto.y].setIcon(new ImageIcon(getClass().getResource("/Assassin(By Meilun).png")));
                } else {
                    campoGrafico[ponto.x][ponto.y].setIcon(new ImageIcon(getClass().getResource("/Assassin(2).png")));
                }
                break;
            case CLERIGO:
                if (p.getSide() == 0) {
                    campoGrafico[ponto.x][ponto.y].setIcon(new ImageIcon(getClass().getResource("/Clerigo(By Meilun).png")));
                } else {
                    campoGrafico[ponto.x][ponto.y].setIcon(new ImageIcon(getClass().getResource("/Clerigo(2).png")));
                }
                break;
            case BARDO:
                if (p.getSide() == 0) {
                    campoGrafico[ponto.x][ponto.y].setIcon(new ImageIcon(getClass().getResource("/Bardo(By Meilun).png")));
                } else {
                    campoGrafico[ponto.x][ponto.y].setIcon(new ImageIcon(getClass().getResource("/Bardo(2).png")));
                }
                break;
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TabuleiroView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TabuleiroView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TabuleiroView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TabuleiroView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TabuleiroView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify      
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration                   

}
